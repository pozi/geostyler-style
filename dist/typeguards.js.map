{"version":3,"file":"typeguards.js","sourceRoot":"","sources":["../typeguards.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * Contains typeguards for geostyler-style\r\n * https://basarat.gitbook.io/typescript/type-system/typeguard#user-defined-type-guards\r\n */\r\n\r\nfunction isString(str: any){\r\n  if (str != null && typeof str.valueOf() === 'string') {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nfunction isNumber(num: any){\r\n  if (num != null && typeof num.valueOf() === 'number') {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction isBoolean(bool: any){\r\n  if (bool != null && typeof bool.valueOf() === 'boolean') {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nimport {\r\n  CombinationFilter,\r\n  CombinationOperator,\r\n  ComparisonFilter,\r\n  ComparisonOperator,\r\n  FillSymbolizer,\r\n  Filter,\r\n  GrayChannel,\r\n  IconSymbolizer,\r\n  LineSymbolizer,\r\n  MarkSymbolizer,\r\n  NegationFilter,\r\n  NegationOperator,\r\n  Operator,\r\n  PropertyType,\r\n  RasterSymbolizer,\r\n  RGBChannel,\r\n  Rule,\r\n  ScaleDenominator,\r\n  TextSymbolizer,\r\n  Expression,\r\n  GeoStylerBooleanFunction,\r\n  GeoStylerNumberFunction,\r\n  GeoStylerStringFunction,\r\n  GeoStylerUnknownFunction,\r\n  GeoStylerFunction,\r\n  PointSymbolizer,\r\n  Symbolizer,\r\n  FunctionCall,\r\n  Sprite\r\n} from './index';\r\n\r\nexport const isExpression = (got: any): got is Expression<any> => {\r\n  return isGeoStylerFunction(got) || isPropertyType(got);\r\n};\r\n\r\n/**\r\n * @deprecated use isFunction instead\r\n */\r\nexport const isFunctionCall = (got: any): got is FunctionCall<any> => {\r\n  return got.type === 'functioncall' &&\r\n    got.hasOwnProperty('name') &&\r\n    isString(got.name) &&\r\n    got.hasOwnProperty('args') &&\r\n    Array.isArray(got.args) &&\r\n    got.args.every((arg: any) => isExpression(arg));\r\n};\r\n\r\n// PropertyValue\r\nexport const isPropertyType = (got: any): got is PropertyType => {\r\n  return isString(got) || isNumber(got) || isBoolean(got) || got === null;\r\n};\r\n\r\n// ScaleDenominator\r\nexport const isScaleDenominator = (got: any): got is ScaleDenominator => {\r\n  return !!((got?.min || got?.max) &&\r\n    ((!!got.min) ? isGeoStylerNumberFunction(got.min) || isNumber(got.min) : true) &&\r\n    ((!!got.max) ? isGeoStylerNumberFunction(got.max) || isNumber(got.max) : true));\r\n};\r\n\r\n// Operators\r\nexport const isOperator = (got: any): got is Operator => {\r\n  return isComparisonOperator(got) ||\r\n    isCombinationOperator(got) ||\r\n    isNegationOperator(got);\r\n};\r\nexport const isComparisonOperator = (got: any): got is ComparisonOperator => {\r\n  return ['==', '*=' , '!=' , '<' , '<=' , '>' , '>=', '<=x<='].includes(got);\r\n};\r\nexport const isCombinationOperator = (got: any): got is CombinationOperator => {\r\n  return ['&&', '||'].includes(got);\r\n};\r\nexport const isNegationOperator = (got: any): got is NegationOperator => {\r\n  return got === '!';\r\n};\r\n\r\n// Filters\r\nexport const isFilter = (got: any): got is Filter => {\r\n  return isComparisonFilter(got) ||\r\n    isCombinationFilter(got) ||\r\n    isGeoStylerBooleanFunction(got) ||\r\n    isNegationFilter(got) ||\r\n    isGeoStylerBooleanFunction(got) ||\r\n    isBoolean(got);\r\n};\r\n\r\nexport const isComparisonFilter = (got: any): got is ComparisonFilter => {\r\n  const expectedLength = got && got[0] === '<=x<=' ? 4 : 3;\r\n  return (\r\n    Array.isArray(got) &&\r\n    got.length === expectedLength &&\r\n    isComparisonOperator(got[0]) &&\r\n    isExpression(got[1]) &&\r\n    isExpression(got[2]) &&\r\n    (got[0] !== '<=x<=' || isNumber(got[3]))\r\n  );\r\n};\r\nexport const isCombinationFilter = (got: any): got is CombinationFilter => {\r\n  return Array.isArray(got) &&\r\n    got.length >= 3 &&\r\n    isCombinationOperator(got[0]) &&\r\n    got.every((arg, index) => index === 0 || isFilter(arg));\r\n};\r\nexport const isNegationFilter = (got: any): got is NegationFilter => {\r\n  return Array.isArray(got) &&\r\n    got.length === 2 &&\r\n    isNegationOperator(got[0]) &&\r\n    isFilter(got[1]);\r\n};\r\n\r\n// Symbolizers\r\nexport const isSymbolizer = (got: any): got is Symbolizer => {\r\n  return isPointSymbolizer(got) ||\r\n  isLineSymbolizer(got) ||\r\n  isFillSymbolizer(got) ||\r\n  isRasterSymbolizer(got);\r\n};\r\nexport const isPointSymbolizer = (got: any): got is PointSymbolizer => {\r\n  return isIconSymbolizer(got) || isMarkSymbolizer(got) || isTextSymbolizer(got);\r\n};\r\nexport const isIconSymbolizer = (got: any): got is IconSymbolizer => {\r\n  return got?.kind === 'Icon';\r\n};\r\nexport const isTextSymbolizer = (got: any): got is TextSymbolizer => {\r\n  return got?.kind === 'Text';\r\n};\r\nexport const isMarkSymbolizer = (got: any): got is MarkSymbolizer => {\r\n  return got?.kind === 'Mark' && isString(got?.wellKnownName);\r\n};\r\nexport const isLineSymbolizer = (got: any): got is LineSymbolizer => {\r\n  return got?.kind === 'Line';\r\n};\r\nexport const isFillSymbolizer = (got: any): got is FillSymbolizer => {\r\n  return got?.kind === 'Fill';\r\n};\r\nexport const isRasterSymbolizer = (got: any): got is RasterSymbolizer => {\r\n  return got?.kind === 'Raster';\r\n};\r\n\r\n// Rule\r\nexport const isRule = (got: any): got is Rule => {\r\n  return !!((isString(got?.name) || isNumber(got?.name)) &&\r\n    (got?.filter ? isFilter(got.filter) : true) &&\r\n    (got?.scaleDenominator ? isScaleDenominator(got.scaleDenominator) : true) &&\r\n    got?.symbolizers?.every((arg: any) => isSymbolizer(arg)));\r\n};\r\n\r\n/**\r\n * Checks if ChannelSelection is of type RGBChannel.\r\n */\r\nexport const isRgbChannel = (got: any): got is RGBChannel => {\r\n  return !!(\r\n    got?.redChannel !== undefined\r\n      || got?.greenChannel !== undefined\r\n      || got?.blueChannel !== undefined\r\n  );\r\n};\r\n\r\n/**\r\n * Checks if ChannelSelection is of type GrayChannel.\r\n */\r\nexport const isGrayChannel = (got: any): got is GrayChannel => {\r\n  return !!(got?.grayChannel !== undefined);\r\n};\r\n\r\n// Functions\r\nexport const isGeoStylerNumberFunction = (got: any): got is GeoStylerNumberFunction => {\r\n  const functionNames: GeoStylerNumberFunction['name'][] = [\r\n    'abs',\r\n    'acos',\r\n    'add',\r\n    'asin',\r\n    'atan',\r\n    'atan2',\r\n    'ceil',\r\n    'cos',\r\n    'div',\r\n    'exp',\r\n    'floor',\r\n    'interpolate',\r\n    'log',\r\n    'max',\r\n    'min',\r\n    'modulo',\r\n    'mul',\r\n    'pi',\r\n    'pow',\r\n    'random',\r\n    'rint',\r\n    'round',\r\n    'sin',\r\n    'sqrt',\r\n    'strIndexOf',\r\n    'strLastIndexOf',\r\n    'strLength',\r\n    'sub',\r\n    'tan',\r\n    'toDegrees',\r\n    'toNumber',\r\n    'toRadians'\r\n  ];\r\n  return functionNames.includes(got?.name);\r\n};\r\n\r\nexport const isGeoStylerStringFunction = (got: any): got is GeoStylerStringFunction => {\r\n  const functionNames: GeoStylerStringFunction['name'][] = [\r\n    'numberFormat',\r\n    'strAbbreviate',\r\n    'strCapitalize',\r\n    'strConcat',\r\n    'strDefaultIfBlank',\r\n    'strReplace',\r\n    'strStripAccents',\r\n    'strSubstring',\r\n    'strSubstringStart',\r\n    'strToLowerCase',\r\n    'strToString',\r\n    'strToUpperCase',\r\n    'strTrim'\r\n  ];\r\n  return functionNames.includes(got?.name);\r\n};\r\n\r\nexport const isGeoStylerBooleanFunction = (got: any): got is GeoStylerBooleanFunction => {\r\n  const functionNames: GeoStylerBooleanFunction['name'][] = [\r\n    'all',\r\n    'any',\r\n    'between',\r\n    'double2bool',\r\n    'equalTo',\r\n    'greaterThan',\r\n    'greaterThanOrEqualTo',\r\n    'in',\r\n    'lessThan',\r\n    'lessThanOrEqualTo',\r\n    'not',\r\n    'notEqualTo',\r\n    'parseBoolean',\r\n    'strEndsWith',\r\n    'strEqualsIgnoreCase',\r\n    'strMatches',\r\n    'strStartsWith'\r\n  ];\r\n  return functionNames.includes(got?.name);\r\n};\r\n\r\nexport const isGeoStylerUnknownFunction = (got: any): got is GeoStylerUnknownFunction => {\r\n  const functionNames: GeoStylerUnknownFunction['name'][] = [\r\n    'case',\r\n    'property',\r\n    'step'\r\n  ];\r\n  return functionNames.includes(got?.name);\r\n};\r\n\r\nexport const isGeoStylerFunction = (got: any): got is GeoStylerFunction => {\r\n  return isGeoStylerBooleanFunction(got) ||\r\n    isGeoStylerNumberFunction(got) ||\r\n    isGeoStylerStringFunction(got) ||\r\n    isGeoStylerUnknownFunction(got);\r\n};\r\n\r\nexport const isSprite = (got: any): got is Sprite => {\r\n  return typeof got?.source === 'string' || isGeoStylerFunction(got?.source) &&\r\n    Array.isArray(got.position) &&\r\n    Array.isArray(got.size);\r\n};\r\n"]}